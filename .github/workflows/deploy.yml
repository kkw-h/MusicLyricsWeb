name: Build and Deploy Frontend

on:
  release:
    types: [created, published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Deploy static files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: "dist/*"
        target: ${{ secrets.SERVER_TARGET_PATH }}
        strip_components: 1
        overwrite: true

    - name: Deploy nginx config (optional)
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: "nginx.conf"
        target: ${{ secrets.SERVER_NGINX_CONFIG_PATH }}
        overwrite: true
      continue-on-error: true

    - name: Deploy .htaccess for Apache (optional)
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: ".htaccess"
        target: ${{ secrets.SERVER_TARGET_PATH }}
        overwrite: true
      continue-on-error: true

    - name: Restart web service (optional)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # 重新加载 nginx 配置（如果使用 nginx）
          if command -v nginx &> /dev/null; then
            sudo nginx -t && sudo nginx -s reload
            echo "Nginx configuration reloaded"
          fi
          
          # 重启 Apache 服务（如果使用 Apache）
          if command -v apache2 &> /dev/null; then
            sudo systemctl reload apache2
            echo "Apache configuration reloaded"
          elif command -v httpd &> /dev/null; then
            sudo systemctl reload httpd
            echo "Apache (httpd) configuration reloaded"
          fi
          
          echo "Deployment completed successfully"